{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mboyk\\\\CSE 110\\\\Lab 2\\\\CSE-110-Lab-2\\\\my-app\\\\src\\\\LikeButton.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport heartFull from './heartFull.png';\nimport heartEmpty from './heartEmpty.png';\nimport \"./LikeButton.css\";\n\n// 0 = unliked\n// 1 = liked\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function LikeButton(props) {\n  _s();\n  const [likeState, changeLikeState] = useState(false);\n  const onButtonClick = () => {\n    // check if liked or unliked\n\n    // if unliked: \n    // change button to liked\n    // add title to list\n    // if liked: \n    // chnage button to unliked\n    // remove title from list\n\n    if (likeState == true) {\n      props.setFavList(props.favList.push(props.title));\n      console.log(props.favList);\n    } else {\n      const index = props.favList.indexOf(props.title);\n      props.setFavList(props.favList.splice(index, 1));\n    }\n    changeLikeState(!likeState);\n  };\n\n  // useEffect(() => {\n  //     document.title = `You clicked ${count} times`;\n  // }, [likeState]);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => changeLikeState(!likeState),\n      children: likeState ? /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"heart-button\",\n        src: heartFull\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 27\n      }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"heart-button\",\n        src: heartEmpty\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 78\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n_s(LikeButton, \"P4JB9Cool+BnvBpu0FiUdHbD6nY=\");\n_c = LikeButton;\nvar _c;\n$RefreshReg$(_c, \"LikeButton\");","map":{"version":3,"names":["React","useState","heartFull","heartEmpty","jsxDEV","_jsxDEV","LikeButton","props","_s","likeState","changeLikeState","onButtonClick","setFavList","favList","push","title","console","log","index","indexOf","splice","children","onClick","className","src","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/mboyk/CSE 110/Lab 2/CSE-110-Lab-2/my-app/src/LikeButton.tsx"],"sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\r\nimport heartFull from './heartFull.png';\r\nimport heartEmpty from './heartEmpty.png';\r\nimport \"./LikeButton.css\"\r\n\r\n// 0 = unliked\r\n// 1 = liked\r\n\r\nexport function LikeButton(props: any) {\r\n    const [likeState, changeLikeState] = useState(false);\r\n\r\n    const onButtonClick = () => {\r\n\r\n        // check if liked or unliked\r\n\r\n        // if unliked: \r\n            // change button to liked\r\n            // add title to list\r\n        // if liked: \r\n            // chnage button to unliked\r\n            // remove title from list\r\n\r\n\r\n        if (likeState == true) {\r\n            props.setFavList(props.favList.push(props.title))\r\n\r\n            console.log(props.favList)\r\n\r\n        } else {\r\n            const index = props.favList.indexOf(props.title);\r\n            props.setFavList(props.favList.splice(index, 1));\r\n        }\r\n        changeLikeState(!likeState);\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n    // useEffect(() => {\r\n    //     document.title = `You clicked ${count} times`;\r\n    // }, [likeState]);\r\n\r\n    return (\r\n    <div>\r\n        <button onClick={() => changeLikeState(!likeState)}>\r\n            { likeState ? <img className=\"heart-button\" src={heartFull} /> : <img className=\"heart-button\" src={heartEmpty} />}\r\n        </button>\r\n    </div>\r\n    );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAA+B,OAAO;AAC9D,OAAOC,SAAS,MAAM,iBAAiB;AACvC,OAAOC,UAAU,MAAM,kBAAkB;AACzC,OAAO,kBAAkB;;AAEzB;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,OAAO,SAASC,UAAUA,CAACC,KAAU,EAAE;EAAAC,EAAA;EACnC,MAAM,CAACC,SAAS,EAAEC,eAAe,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EAEpD,MAAMU,aAAa,GAAGA,CAAA,KAAM;IAExB;;IAEA;IACI;IACA;IACJ;IACI;IACA;;IAGJ,IAAIF,SAAS,IAAI,IAAI,EAAE;MACnBF,KAAK,CAACK,UAAU,CAACL,KAAK,CAACM,OAAO,CAACC,IAAI,CAACP,KAAK,CAACQ,KAAK,CAAC,CAAC;MAEjDC,OAAO,CAACC,GAAG,CAACV,KAAK,CAACM,OAAO,CAAC;IAE9B,CAAC,MAAM;MACH,MAAMK,KAAK,GAAGX,KAAK,CAACM,OAAO,CAACM,OAAO,CAACZ,KAAK,CAACQ,KAAK,CAAC;MAChDR,KAAK,CAACK,UAAU,CAACL,KAAK,CAACM,OAAO,CAACO,MAAM,CAACF,KAAK,EAAE,CAAC,CAAC,CAAC;IACpD;IACAR,eAAe,CAAC,CAACD,SAAS,CAAC;EAI/B,CAAC;;EAGD;EACA;EACA;;EAEA,oBACAJ,OAAA;IAAAgB,QAAA,eACIhB,OAAA;MAAQiB,OAAO,EAAEA,CAAA,KAAMZ,eAAe,CAAC,CAACD,SAAS,CAAE;MAAAY,QAAA,EAC7CZ,SAAS,gBAAGJ,OAAA;QAAKkB,SAAS,EAAC,cAAc;QAACC,GAAG,EAAEtB;MAAU;QAAAuB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,gBAAGvB,OAAA;QAAKkB,SAAS,EAAC,cAAc;QAACC,GAAG,EAAErB;MAAW;QAAAsB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9G;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACR,CAAC;AAEV;AAACpB,EAAA,CA1CeF,UAAU;AAAAuB,EAAA,GAAVvB,UAAU;AAAA,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}