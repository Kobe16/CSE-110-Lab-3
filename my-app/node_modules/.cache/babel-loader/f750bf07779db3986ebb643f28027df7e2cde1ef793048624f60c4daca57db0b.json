{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mboyk\\\\CSE 110\\\\Lab 2\\\\CSE-110-Lab-2\\\\my-app\\\\src\\\\hooksExercise.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { ThemeContext, themes } from \"./themeContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function ClickCounter() {\n  _s();\n  const [count, setCount] = useState(0);\n  const handleClick = () => {\n    setCount(count + 1);\n  };\n  useEffect(() => {\n    document.title = `You clicked ${count} times`;\n  }, [count]);\n  const theme = useContext(ThemeContext);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      background: theme.background,\n      color: theme.foreground,\n      padding: \"20px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"You clicked \", count, \" times \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setCount(count + 1),\n      style: {\n        background: theme.foreground,\n        color: theme.background\n      },\n      children: \"Click me\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n}\n\n// Wrapper component to provide context\n_s(ClickCounter, \"QwTh87uW/LikTGP2WSDizL9Txl8=\");\n_c = ClickCounter;\nfunction ToggleTheme() {\n  _s2();\n  const [currentTheme, setCurrentTheme] = useState(themes.light);\n  const toggleTheme = () => {\n    setCurrentTheme(currentTheme === themes.light ? themes.dark : themes.light);\n  };\n  return /*#__PURE__*/_jsxDEV(ThemeContext.Provider, {\n    value: currentTheme,\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: toggleTheme,\n      children: \" Toggle Theme \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(ClickCounter, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 7\n  }, this);\n}\n_s2(ToggleTheme, \"XUkQGtkba25k8FAF8WwW2uStAco=\");\n_c2 = ToggleTheme;\nexport default ToggleTheme;\nvar _c, _c2;\n$RefreshReg$(_c, \"ClickCounter\");\n$RefreshReg$(_c2, \"ToggleTheme\");","map":{"version":3,"names":["React","useState","useEffect","ThemeContext","themes","jsxDEV","_jsxDEV","ClickCounter","_s","count","setCount","handleClick","document","title","theme","useContext","style","background","color","foreground","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","ToggleTheme","_s2","currentTheme","setCurrentTheme","light","toggleTheme","dark","Provider","value","_c2","$RefreshReg$"],"sources":["C:/Users/mboyk/CSE 110/Lab 2/CSE-110-Lab-2/my-app/src/hooksExercise.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { ThemeContext, themes } from \"./themeContext\";\r\n\r\nexport function ClickCounter() {\r\n const [count, setCount] = useState(0);\r\n\r\n const handleClick = () => {\r\n   setCount(count + 1);\r\n };\r\n\r\n useEffect(() => {\r\n   document.title = `You clicked ${count} times`;\r\n }, [count]);\r\n\r\n const theme = useContext(ThemeContext);\r\n return (\r\n    <div\r\n      style={{\r\n        background: theme.background,\r\n        color: theme.foreground,\r\n        padding: \"20px\",\r\n      }}\r\n    >\r\n      <p>You clicked {count} times </p>\r\n      <button\r\n        onClick={() => setCount(count + 1)}\r\n        style={{ background: theme.foreground, color: theme.background }}\r\n      >\r\n        Click me\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\n// Wrapper component to provide context\r\nfunction ToggleTheme() {\r\n    const [currentTheme, setCurrentTheme] = useState(themes.light);\r\n   \r\n    const toggleTheme = () => {\r\n      setCurrentTheme(currentTheme === themes.light ? themes.dark : themes.light);\r\n    };\r\n   \r\n    return (\r\n      <ThemeContext.Provider value={currentTheme}>\r\n        <button onClick={toggleTheme}> Toggle Theme </button>\r\n        <ClickCounter />\r\n      </ThemeContext.Provider>\r\n    );\r\n   }\r\n   \r\n   export default ToggleTheme;"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,YAAY,EAAEC,MAAM,QAAQ,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtD,OAAO,SAASC,YAAYA,CAAA,EAAG;EAAAC,EAAA;EAC9B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,CAAC,CAAC;EAErC,MAAMU,WAAW,GAAGA,CAAA,KAAM;IACxBD,QAAQ,CAACD,KAAK,GAAG,CAAC,CAAC;EACrB,CAAC;EAEDP,SAAS,CAAC,MAAM;IACdU,QAAQ,CAACC,KAAK,GAAG,eAAeJ,KAAK,QAAQ;EAC/C,CAAC,EAAE,CAACA,KAAK,CAAC,CAAC;EAEX,MAAMK,KAAK,GAAGC,UAAU,CAACZ,YAAY,CAAC;EACtC,oBACGG,OAAA;IACEU,KAAK,EAAE;MACLC,UAAU,EAAEH,KAAK,CAACG,UAAU;MAC5BC,KAAK,EAAEJ,KAAK,CAACK,UAAU;MACvBC,OAAO,EAAE;IACX,CAAE;IAAAC,QAAA,gBAEFf,OAAA;MAAAe,QAAA,GAAG,cAAY,EAACZ,KAAK,EAAC,SAAO;IAAA;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eACjCnB,OAAA;MACEoB,OAAO,EAAEA,CAAA,KAAMhB,QAAQ,CAACD,KAAK,GAAG,CAAC,CAAE;MACnCO,KAAK,EAAE;QAAEC,UAAU,EAAEH,KAAK,CAACK,UAAU;QAAED,KAAK,EAAEJ,KAAK,CAACG;MAAW,CAAE;MAAAI,QAAA,EAClE;IAED;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV;;AAEA;AAAAjB,EAAA,CA/BgBD,YAAY;AAAAoB,EAAA,GAAZpB,YAAY;AAgC5B,SAASqB,WAAWA,CAAA,EAAG;EAAAC,GAAA;EACnB,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAG9B,QAAQ,CAACG,MAAM,CAAC4B,KAAK,CAAC;EAE9D,MAAMC,WAAW,GAAGA,CAAA,KAAM;IACxBF,eAAe,CAACD,YAAY,KAAK1B,MAAM,CAAC4B,KAAK,GAAG5B,MAAM,CAAC8B,IAAI,GAAG9B,MAAM,CAAC4B,KAAK,CAAC;EAC7E,CAAC;EAED,oBACE1B,OAAA,CAACH,YAAY,CAACgC,QAAQ;IAACC,KAAK,EAAEN,YAAa;IAAAT,QAAA,gBACzCf,OAAA;MAAQoB,OAAO,EAAEO,WAAY;MAAAZ,QAAA,EAAC;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACrDnB,OAAA,CAACC,YAAY;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACK,CAAC;AAE3B;AAACI,GAAA,CAbKD,WAAW;AAAAS,GAAA,GAAXT,WAAW;AAejB,eAAeA,WAAW;AAAC,IAAAD,EAAA,EAAAU,GAAA;AAAAC,YAAA,CAAAX,EAAA;AAAAW,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}